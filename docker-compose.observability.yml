# Docker Compose para Stack de Observabilidade
# Para usar: docker-compose -f docker-compose.observability.yml up -d

version: '3.8'

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: dark-api-otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./observability/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4318:4318" # OTLP HTTP receiver
      - "4317:4317" # OTLP gRPC receiver
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
    networks:
      - observability

  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: dark-api-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # gRPC
    networks:
      - observability

  # Prometheus - Metrics Storage
  prometheus:
    image: prom/prometheus:latest
    container_name: dark-api-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - observability
    depends_on:
      - otel-collector

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dark-api-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - observability
    depends_on:
      - prometheus
      - jaeger

networks:
  observability:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
