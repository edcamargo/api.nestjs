version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/nestjs
      - JWT_SECRET=dev-secret-change-in-production
      - PORT=3000
      - OTEL_ENABLED=false
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nestjs-network

  db:
    image: postgres:16-alpine
    container_name: nestjs-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nestjs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - nestjs-network

  # Opcional: PgAdmin para gerenciar o banco
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nestjs-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - nestjs-network

volumes:
  postgres_data:
    driver: local

networks:
  nestjs-network:
    driver: bridge
