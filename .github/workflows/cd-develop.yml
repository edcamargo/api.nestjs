name: CD - Develop

on:
  push:
    branches:
      - develop

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.api.edcamargo.dev
    
    env:
      DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build application
        run: npm run build

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nestjs-api:staging
            ${{ secrets.DOCKER_USERNAME }}/nestjs-api:staging-${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/nestjs-api:staging
          cache-to: type=inline

      - name: Deploy summary
        run: |
          echo "### ðŸš€ Staging Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: develop" >> $GITHUB_STEP_SUMMARY
          echo "- **Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Image**: ${{ secrets.DOCKER_USERNAME }}/nestjs-api:staging" >> $GITHUB_STEP_SUMMARY

      # Uncomment if you want Slack notifications
      # - name: Notify deployment
      #   if: always()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     text: |
      #       Staging deployment ${{ job.status }}
      #       Commit: ${{ github.sha }}
      #       Author: ${{ github.actor }}
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
